Introduction to the Terminal and wget.
“Earth Science in the Digital Age” 
West Virginia University, Fall 2018

What is the “terminal”?
	A few terms to get started:
	console - the entire input/output system
	terminal - the user interface with the console. 
	shell - UNIX or Linux term for the terminal. The bash shell is one kind of shell and is the default 	for Linux and OSX
	command line - the literal line in a console where a command is entered
	prompt - the start of the command line. It typically includes your computer and user names and 
		ends with a dollar sign ($). Commands are typed after the prompt
	
	Why use it? 
		-Facilitates complex processes with minimal keystrokes
		-Automate repetitive tasks, rather than re-creating the task each time
		-Forces user to become intimate with data stored on their machine and used in analysis
		-Familiarizes user with computing language, and is a “gateway” to mastering computing 
			techniques in R, C, Python, and others. 

2) Opening the terminal
	On Mac OSX
		Terminal is the default OS X interface. Find it by opening your Applications folder, and 
		then Utilities folder. The default shell on Mac is bash. In order to see which shell you
		are currently using, type the following after the prompt:
		
		`$echo SHELL`

		If you are not using bash and want to, type: 
		
		`$ bash`
		
		If bash exists, you will get a new prompt, such as: 
		
		`bash-3.2$`

	
	In Windows
	Windows operating systems do not have a default shell program installed. You may need to 
	install one yourself. Software Carpentry provides great step-by-step instructions on how to
	set up a shell for Windows: http://swcarpentry.github.io/shell-novice/setup.html

	Welcome screen
		When you open terminal, terminal will present the welcome screen. Mine looks like this:

			    `Last login: Wed May 16 09:27:56 on ttys000
					Hello Alex. We've been expecting you.
					Donatello:~ AWDComp$` 

			Line 1 tells you the date and time of your last terminal session.
			Line 3 has two parts. Before the colon is the name of your computer. 
			On a Mac, you can find and/or change this name under System 			Preferences. After the colon is the name of the user you are 			currently logged in under. All commands run on Terminal begin
			after the $ symbol following this line. 

			You can also display a customized terminal welcome message. Although 
			not required to successfully run terminal, you can tailor your 
			experience and have some fun by setting the welcome message:

				`cd /etc  #Sets working dir to the hidden etc folder`
				`sudo pico motd  #opens your “message of the day” file. Note: it 
					#will require your user password to continue.` 
				Once the motd screen is available, type in your desired message.
				Press ctrl + x to exit the interface.
				The next time you log in to terminal, your message will appear
				under your Last login message. 
				

3) Basic shell commands
	The working directory
		home directory - the “user’s” directory, i.e. the directory a user is in upon login
		working directory - the current directory (i.e., “folder”) that you are in. By default, this
		is your home directory. You can print your working directory:
		
		`Donatello:~ AWDComp$ pwd
		   /Users/AWDComp #This indicates that I am currently working in my home directory`

		
	 Change working directory
		You can change your working directory to any directory currently on your system:
		
		Option 1 - write out full name of directory: 

		`Donatello:~AWDComp$ cd /Users/AWDComp/Documents/WVU`
		`Donatello:WVU AWDComp$ pwd #The “WVU” after the colon indicates that I am
				#now working in my WVU directory, and signed in as AWDComp. If I
				#print my wd (using pwd), I get the full directory string:
		    #/Users/AWDComp/Documents/WVU`

		Option 2 - if the directory you wish to set as wd is under your current working directory, 
				you can eliminate all items preceding the wd: 

		`Donatello:~ AWDComp$ cd Documents/WVU
		Donatello:WVU AWDComp$ pwd
		/Users/AWDComp/Documents/WVU`

		Option 3 - Use “~” as a stand-in for your home directory

			`Donatello:AWDComp$ cd ~/Documents/WVU
			Donatello:WVU AWDComp$ pwd
			/Users/AWDComp/Documents/WVU`
		 	
			This also works if you want to reset your home directory as your wd: 
			`Donatello:Documents AWDComp$ cd ~
			Donatello:~ AWDComp$ pwd
			/Users/AWDComp` 

	Create new directory
			You can create new directories and subdirectories from the terminal:
			
			Create a new directory under you current wd:
			Donatello:Documents AWDComp$ mkdir Fall2018
				#Physically check in your file explorer, and you should see a 
				#”Fall 2018” folder in your working directory

			Create a new directory under a directory not your current wd:
			`Donatello:Documents AWDComp$ mkdir ~/Documents/WVU/aabb`

			Create a directory with a subdirectory, all in one swipe: 
			`Donatello:Documents AWDComp$ mkdir -p ~/Documents/Fall2018/Terminal1`
			
			Delete a directory:
			Donatello:Documents AWDComp$ rmdir ~/Documents/Fall2018/Terminal1
			
	List files and folders in your working directory
		If you want to check which items exist in a directory, you can use: 

		ls  #lists items in your working directory

		ls ~/Documents/WVU/Dissertation #lists items in another specified dir

		These can be useful if you want to explore other directories before changing your wd	
	Copy and paste files
		Print contents of a file into the terminal:
		
		cat existingFile.txt

		You can copy the contents of one file into another, new file: 
		
		cp existingFile.txt NewFile.txt	

		You can check two files for differences, then save a new file describing the differences:
		
		diff existingFile.txt NewFile.txt > diffFiles.txt


	Delete files
		Donatello:Documents AWDComp$ rm bogus.txt
		
		Multiple files at once:
		Donatello:Documents AWDComp$ rm bogus.txt grody.txt fluvial.rtf

	shell Help
		You can type help following the prompt to see a list of help options. 
		For example, typing help echo will pull up information about the echo command

	Basic syntax
		Spacing
			Command-line coding is case-sensitive. The first place to check for an error
			is with spacing and upper/lowercase lettering. 

		Moving up and down to past commands
			Reactivate past commands by using the arrow control keys on your keyboard
			Or, type history following your prompt to list all past commands

4) wget and git with terminal

	What is wget?
	wget is a command line package that allows you to download files from the web easily and 
	quickly. This is particularly useful when you want to download multiple files at once without
	manually downloading each file individually. 

	Downloading wget
		Unless you have previously used it, wget is probably not installed on your computer.
		You can download wget:
			Option 1: Straight from the Free Software Foundation: https://www.gnu.org/				software/wget/ 
			Option 2: First downloading HomeBrew, a package installer that allows you
				to install popular free packages like wget and git straight from your shell. 
				A step-by-step guide on preparing HomeBrew: https://						www.howtogeek.com/211541/homebrew-for-os-x-easily-installs-					desktop-apps-and-terminal-utilities/
		Once wget is on your machine, you can access the version details:
			wget --version
		and help information:
			wget -h

	Retrieve one file from url
		To download a single dataset from a url and save in your working directory:

		wget ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/all/USW00013736.dly

		Check in your working directory to see that you now have a file named USW0013736.dly. You 
		can open this file in excel, or change to a .txt or .csv

		You can also manually specify the file name and destination in the original command:

		wget -O morgdata.txt ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/all/		USW00013736.dly 

		Here, the -O option is used to indicate that the contents of the url will be sent to a file in your 
		wd called “morgdata.txt”


	Retrieve multiple files from url
	
	This will download all files from the Pages2k dataset and put them in your working directory.
	
	wget -r -e robots=off -A.txt -np https://www1.ncdc.noaa.gov/pub/data/	paleo/pages2k/pages2k-temperature-v2-2017/data-current-version/

	Note the use of various options in the wget command. 
	 the -r option tells wget to recursively download. This means that it not only 	pulls the website at face value, but also all files included under that website. Try it without -r 	and see what happens:

	wget https://www1.ncdc.noaa.gov/pub/data/paleo/pages2k/	pages2k-temperature-v2-2017/data-current-version/

	Enabling the -A option allows you to only pull files of a certain type. For example, -A.txt pulls
	all .txt files, which in this case, is what you want. Alternatively, you could specifiy -A.pdf, -A.csv,
	-A.doc, etc.

	The robots option [-e] is set to robots=off in the above wget command. This is called robot 
	exclusion (https://www.gnu.org/software/wget/manual/html_node/Robot-Exclusion.html), and
	sometimes can help wget more directly access your desired files if robots.txt discourages 
	a complete search of the website. Remove this option, and notice that wget will only
	download a robots.txt file, which is useless for your current situation. 

	The -np option stands for “no parent. wget will follow the directory index on the website. In the 
	case of the Pages 2k directory, wget will continue up one directory to the parent directory, and
	then continue to download all files in that directory as well. If you want to disallow this feature,
	set the -np option. In the current example, re-run your command without the -np option 	specified - you will see that not only are the files in the data-current-version folder downloaded, 
	but also the files in the data-version-2.0.0 folder (and ALL of the files in successive directories
	above that!!) This is a ton of files, and you probably don’t need them all!
	
	In this case, you can achieve the same effect as -np by specifying the option -l1. By default, 	wget will search and download files from up to 5 directories (-l5) in the current webpage
	file structure. This means it will follow all links on the first page (-l1), the second page (-l2), etc 
	up to the fifth page (-l5). -l0 is “infinity” - this could download the entire Internet, because wget
	keeps following every link it finds. **

	**Note that if you make a mistake on any terminal command, or a command is taking longer 
	than expected, you can always stop the process by pressing CTRL+C.


Further Reading
	Learning the bash Shell. Cameron Newham and Bill Rosenblatt. O’Reilly Media

	“The Unix Shell”, Software Carpentry free tutorial: http://swcarpentry.github.io/shell-novice/
	
	“Extra Unix Shell Material” Software Carpentry: http://swcarpentry.github.io/shell-extras/

	GNU wget manual: https://www.gnu.org/software/wget/manual/wget.html

	Install packages with Homebrew: https://www.howtogeek.com/211541/homebrew-for-os-x-		easily-installs-desktop-apps-and-terminal-utilities/

	



